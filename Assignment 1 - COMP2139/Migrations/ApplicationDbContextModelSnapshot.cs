// <auto-generated />
using System;
using Assignment_1___COMP2139.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Assignment_1___COMP2139.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Live music events",
                            Name = "Music"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Technology conferences",
                            Name = "Tech"
                        });
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableTickets")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableTickets = 100,
                            CategoryId = 1,
                            Date = new DateTime(2025, 10, 19, 21, 10, 33, 964, DateTimeKind.Utc).AddTicks(1222),
                            TicketPrice = 25.00m,
                            Title = "Jazz Night"
                        },
                        new
                        {
                            Id = 2,
                            AvailableTickets = 50,
                            CategoryId = 2,
                            Date = new DateTime(2025, 10, 29, 21, 10, 33, 964, DateTimeKind.Utc).AddTicks(1229),
                            TicketPrice = 99.00m,
                            Title = "AI Summit"
                        });
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.PurchaseEvent", b =>
                {
                    b.Property<int>("PurchaseId")
                        .HasColumnType("integer");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.HasKey("PurchaseId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("PurchaseEvents");
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Event", b =>
                {
                    b.HasOne("Assignment_1___COMP2139.Models.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.PurchaseEvent", b =>
                {
                    b.HasOne("Assignment_1___COMP2139.Models.Event", "Event")
                        .WithMany("PurchaseEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_1___COMP2139.Models.Purchase", "Purchase")
                        .WithMany("PurchaseEvents")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Category", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Event", b =>
                {
                    b.Navigation("PurchaseEvents");
                });

            modelBuilder.Entity("Assignment_1___COMP2139.Models.Purchase", b =>
                {
                    b.Navigation("PurchaseEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
